{"name":"SMXTwitterEngine","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"An easy to use Twitter library for iOS","google":"","body":"# SMXTwitterEngine\r\n\r\nAfter being annoyed by the complexity of other Twitter libraries for iOS, I built this. It supports\r\nposting a tweet, and receiving a user's stream.\r\n\r\nIt uses iOS5's Twitter framework when running on a device that supports it, but falls back\r\nto good a old fashioned UIWebView if there are no Twitter accounts configured in iOS.\r\n\r\nIt's really simple to use:\r\n\r\n``` objc\r\n[SMXTwitterEngine sendTweet:@\"This is a tweet\" withCompletionHandler:^(NSDictionary *response, NSError *error){\r\n\tNSLog(@\"Response: %@\", response);\r\n\tNSLog(@\"Error: %@\", error);\r\n}];\r\n```\r\n\r\nWant to attach an image? Easy:\r\n\r\n``` objc\r\n[SMXTwitterEngine sendTweet:@\"This is a tweet\" andImage:myImage withCompletionHandler:^(NSDictionary *response, NSError *error){\r\n\tNSLog(@\"Response: %@\", response);\r\n\tNSLog(@\"Error: %@\", error);\r\n}];\r\n```\r\n\r\nIf you want to allow users to choose an account not in their Twitter settings:\r\n\r\n``` objc\r\n[SMXTwitterEngine setConsumerKey:@\"KEY\" consumerSecret:@\"SECRET\" callback:@\"CALLBACK\"];\r\n```\r\n\r\nYou'll need to get your consumer key, consumer secret and callback set up [here](http://dev.twitter.com/apps). \r\nDon't forget to make the application \"Read & Write\".\r\n\r\nWould you rather use a Tweet Sheet on iOS 5 if possible? Easy:\r\n\r\n``` objc\r\n[SMXTwitterEngine setUseTweetComposeSheetIfPossible:YES];\r\n```\r\n\r\nNOTE: Using a Tweet sheet will return an empty NSDictionary to your completion handler, since iOS doesn't make any\r\ninformation about the posted tweet available.\r\n\r\nWant to receive a stream of tweets?\r\n\r\n```objc\r\n[SMXTwitterEngine streamTweetsWithHandler:^(NSDictionary *message, NSError *error) {\r\n\tNSLog(@\"Object: %@\", message);\r\n}];\r\n```\r\n\r\nThat's it! SMXTwitterEngine will handle all authentication for you, so you don't need to worry about a thing!\r\n\r\n\r\n## Installing\r\n\r\nFirst, grab the submodules:\r\n\r\n```\r\ngit submodule update --init\r\n```\r\n\r\nThen, drag the SMXTwitterEngine Xcode project into your project. Add libSMXTwitterEngine as a dependency,\r\nand make sure to link against it.\r\n\r\nAdd -ObjC and -all_load to your \"Other Linker Flags\".\r\n\r\nYou'll also need to link against Twitter.framework and Accounts.framework. If you plan to support iOS 4.x, you'll\r\nneed to make sure those are optional frameworks (weakly linked).\r\n\r\nAdd \"SMXTwitterEngine\" to your Header Search Paths, and then make sure that THWebController.bundle is in your \r\n\"Copy Bundle Resources\" Build Phase.\r\n\r\nFinally:\r\n\r\n```objc\r\n#import <libSMXTwitterEngine/SMXTwitterEngine.h>\r\n```\r\n\r\nAnd you're good to go!\r\n\r\n## Demo\r\n\r\nHave a look at the example project for a working demo.\r\n\r\n\r\n## iOS 4\r\n\r\nI decided to remove iOS 4 support from SMXTwitterEngine while adding support for the streaming API.\r\nThis was mostly because of the overhead of having another JSON parser in the framework. Now, it uses\r\nNSJSONSerialization for simplicity.\r\n\r\n## iOS 3\r\n\r\nSince iOS 3 doesn't support blocks, it is currently not supported. Feel free to issue a pull request ;)"}